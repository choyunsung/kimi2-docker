events {
    worker_connections 1024;
}

http {
    # 업스트림 서버 정의
    upstream kimi_backend {
        least_conn;  # 연결 수가 적은 서버로 요청 분산
        server kimi-k2-kilocode:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;  # Keep-alive 연결 유지
    }

    # 요청 제한 설정 (DDoS 방지)
    limit_req_zone $binary_remote_addr zone=kilocode_limit:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=kilocode_conn:10m;

    # 캐시 설정
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=kimi_cache:10m 
                     max_size=1g inactive=60m use_temp_path=off;

    server {
        listen 80;
        server_name localhost;

        # 클라이언트 설정
        client_max_body_size 100M;
        client_body_timeout 300s;
        
        # 프록시 타임아웃 설정 (긴 추론 시간 고려)
        proxy_read_timeout 300s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        
        # 버퍼 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 24 4k;
        proxy_busy_buffers_size 16k;
        
        # CORS 헤더 (Kilo Code 연동)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Api-Key' always;
        add_header 'Access-Control-Max-Age' '86400' always;

        # OPTIONS 요청 처리 (CORS preflight)
        location / {
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            # 요청 제한 적용
            limit_req zone=kilocode_limit burst=20 nodelay;
            limit_conn kilocode_conn 10;

            # 프록시 설정
            proxy_pass http://kimi_backend;
            proxy_http_version 1.1;
            
            # 헤더 설정
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Keep-alive 설정
            proxy_set_header Connection "";
        }

        # 헬스체크 엔드포인트
        location /health {
            proxy_pass http://kimi_backend/health;
            access_log off;
            
            # 헬스체크는 제한 없음
            limit_req off;
            limit_conn off;
        }

        # 메트릭 엔드포인트
        location /metrics {
            proxy_pass http://kimi_backend/metrics;
            
            # 내부 네트워크만 접근 가능
            allow 172.20.0.0/16;
            deny all;
        }

        # 모델 정보 캐싱
        location /v1/models {
            proxy_pass http://kimi_backend/v1/models;
            proxy_cache kimi_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # 채팅 완성 엔드포인트 (스트리밍 지원)
        location /v1/chat/completions {
            proxy_pass http://kimi_backend/v1/chat/completions;
            
            # SSE (Server-Sent Events) 지원
            proxy_set_header Cache-Control no-cache;
            proxy_set_header X-Accel-Buffering no;
            
            # 스트리밍을 위한 버퍼링 비활성화
            proxy_buffering off;
            
            # 청크 인코딩 지원
            chunked_transfer_encoding on;
        }

        # 완성 엔드포인트
        location /v1/completions {
            proxy_pass http://kimi_backend/v1/completions;
            
            # 스트리밍 지원
            proxy_set_header Cache-Control no-cache;
            proxy_set_header X-Accel-Buffering no;
            proxy_buffering off;
            chunked_transfer_encoding on;
        }

        # 정적 에러 페이지
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # SSL 설정 (프로덕션용)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # 위와 동일한 location 블록들
    # }
}